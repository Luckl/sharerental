/*
 * This file is generated by jOOQ.
 */
package nl.sharerental.be.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Renter implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final String firstName;
    private final String lastName;
    private final String phoneNumber;
    private final String email;
    private final Long locationId;
    private final LocalDateTime createdAt;
    private final String enteredByUser;

    public Renter(Renter value) {
        this.id = value.id;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.phoneNumber = value.phoneNumber;
        this.email = value.email;
        this.locationId = value.locationId;
        this.createdAt = value.createdAt;
        this.enteredByUser = value.enteredByUser;
    }

    public Renter(
        Long id,
        String firstName,
        String lastName,
        String phoneNumber,
        String email,
        Long locationId,
        LocalDateTime createdAt,
        String enteredByUser
    ) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.phoneNumber = phoneNumber;
        this.email = email;
        this.locationId = locationId;
        this.createdAt = createdAt;
        this.enteredByUser = enteredByUser;
    }

    /**
     * Getter for <code>public.renter.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.renter.first_name</code>.
     */
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Getter for <code>public.renter.last_name</code>.
     */
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Getter for <code>public.renter.phone_number</code>.
     */
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    /**
     * Getter for <code>public.renter.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>public.renter.location_id</code>.
     */
    public Long getLocationId() {
        return this.locationId;
    }

    /**
     * Getter for <code>public.renter.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.renter.entered_by_user</code>.
     */
    public String getEnteredByUser() {
        return this.enteredByUser;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Renter other = (Renter) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!this.lastName.equals(other.lastName))
            return false;
        if (this.phoneNumber == null) {
            if (other.phoneNumber != null)
                return false;
        }
        else if (!this.phoneNumber.equals(other.phoneNumber))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.locationId == null) {
            if (other.locationId != null)
                return false;
        }
        else if (!this.locationId.equals(other.locationId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.enteredByUser == null) {
            if (other.enteredByUser != null)
                return false;
        }
        else if (!this.enteredByUser.equals(other.enteredByUser))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.phoneNumber == null) ? 0 : this.phoneNumber.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.locationId == null) ? 0 : this.locationId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.enteredByUser == null) ? 0 : this.enteredByUser.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Renter (");

        sb.append(id);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(phoneNumber);
        sb.append(", ").append(email);
        sb.append(", ").append(locationId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(enteredByUser);

        sb.append(")");
        return sb.toString();
    }
}
