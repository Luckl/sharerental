/*
 * This file is generated by jOOQ.
 */
package nl.sharerental.be.jooq.generated.tables.records;


import java.math.BigDecimal;
import java.time.LocalDate;

import nl.sharerental.be.jooq.generated.tables.Transaction;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transaction.id</code>.
     */
    public TransactionRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.transaction.rental_item_id</code>.
     */
    public TransactionRecord setRentalItemId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.rental_item_id</code>.
     */
    public Long getRentalItemId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.transaction.start_date</code>.
     */
    public TransactionRecord setStartDate(LocalDate value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.start_date</code>.
     */
    public LocalDate getStartDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>public.transaction.end_date</code>.
     */
    public TransactionRecord setEndDate(LocalDate value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.end_date</code>.
     */
    public LocalDate getEndDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>public.transaction.price</code>.
     */
    public TransactionRecord setPrice(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.transaction.current_status_id</code>.
     */
    public TransactionRecord setCurrentStatusId(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.current_status_id</code>.
     */
    public Long getCurrentStatusId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.transaction.mollie_payment_reference</code>.
     */
    public TransactionRecord setMolliePaymentReference(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.mollie_payment_reference</code>.
     */
    public String getMolliePaymentReference() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.transaction.amount</code>.
     */
    public TransactionRecord setAmount(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>public.transaction.renter_id</code>.
     */
    public TransactionRecord setRenterId(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction.renter_id</code>.
     */
    public Long getRenterId() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(Long id, Long rentalItemId, LocalDate startDate, LocalDate endDate, BigDecimal price, Long currentStatusId, String molliePaymentReference, BigDecimal amount, Long renterId) {
        super(Transaction.TRANSACTION);

        setId(id);
        setRentalItemId(rentalItemId);
        setStartDate(startDate);
        setEndDate(endDate);
        setPrice(price);
        setCurrentStatusId(currentStatusId);
        setMolliePaymentReference(molliePaymentReference);
        setAmount(amount);
        setRenterId(renterId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(nl.sharerental.be.jooq.generated.tables.pojos.Transaction value) {
        super(Transaction.TRANSACTION);

        if (value != null) {
            setId(value.getId());
            setRentalItemId(value.getRentalItemId());
            setStartDate(value.getStartDate());
            setEndDate(value.getEndDate());
            setPrice(value.getPrice());
            setCurrentStatusId(value.getCurrentStatusId());
            setMolliePaymentReference(value.getMolliePaymentReference());
            setAmount(value.getAmount());
            setRenterId(value.getRenterId());
            resetChangedOnNotNull();
        }
    }
}
