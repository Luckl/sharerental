/*
 * This file is generated by jOOQ.
 */
package nl.sharerental.be.jooq.generated.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LessorLocation implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long lessorId;
    private final Long locationId;

    public LessorLocation(LessorLocation value) {
        this.lessorId = value.lessorId;
        this.locationId = value.locationId;
    }

    public LessorLocation(
        Long lessorId,
        Long locationId
    ) {
        this.lessorId = lessorId;
        this.locationId = locationId;
    }

    /**
     * Getter for <code>public.lessor_location.lessor_id</code>.
     */
    public Long getLessorId() {
        return this.lessorId;
    }

    /**
     * Getter for <code>public.lessor_location.location_id</code>.
     */
    public Long getLocationId() {
        return this.locationId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final LessorLocation other = (LessorLocation) obj;
        if (this.lessorId == null) {
            if (other.lessorId != null)
                return false;
        }
        else if (!this.lessorId.equals(other.lessorId))
            return false;
        if (this.locationId == null) {
            if (other.locationId != null)
                return false;
        }
        else if (!this.locationId.equals(other.locationId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.lessorId == null) ? 0 : this.lessorId.hashCode());
        result = prime * result + ((this.locationId == null) ? 0 : this.locationId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("LessorLocation (");

        sb.append(lessorId);
        sb.append(", ").append(locationId);

        sb.append(")");
        return sb.toString();
    }
}
