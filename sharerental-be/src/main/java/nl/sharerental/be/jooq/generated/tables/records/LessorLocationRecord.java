/*
 * This file is generated by jOOQ.
 */
package nl.sharerental.be.jooq.generated.tables.records;


import nl.sharerental.be.jooq.generated.tables.LessorLocation;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LessorLocationRecord extends UpdatableRecordImpl<LessorLocationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lessor_location.lessor_id</code>.
     */
    public LessorLocationRecord setLessorId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.lessor_location.lessor_id</code>.
     */
    public Long getLessorId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lessor_location.location_id</code>.
     */
    public LessorLocationRecord setLocationId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.lessor_location.location_id</code>.
     */
    public Long getLocationId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LessorLocationRecord
     */
    public LessorLocationRecord() {
        super(LessorLocation.LESSOR_LOCATION);
    }

    /**
     * Create a detached, initialised LessorLocationRecord
     */
    public LessorLocationRecord(Long lessorId, Long locationId) {
        super(LessorLocation.LESSOR_LOCATION);

        setLessorId(lessorId);
        setLocationId(locationId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LessorLocationRecord
     */
    public LessorLocationRecord(nl.sharerental.be.jooq.generated.tables.pojos.LessorLocation value) {
        super(LessorLocation.LESSOR_LOCATION);

        if (value != null) {
            setLessorId(value.getLessorId());
            setLocationId(value.getLocationId());
            resetChangedOnNotNull();
        }
    }
}
