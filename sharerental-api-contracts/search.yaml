openapi: 3.0.3
info:
  title: ShareRental - OpenAPI 3.0
  version: 0.0.1
paths:
  /details/{slug}:
    get:
      tags:
        - search
      summary: Retrieve item details based on slug
      operationId: searchDetails
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
          description: the slug of the rental item
      responses:
        200:
          description: Successful details retrieved
          content:
            application/json:
              schema:
                $ref: './utils/RentalItem.yaml#/components/schemas/RentalItem'
  /category/{category}:
    get:
      tags:
        - search
      summary: Retrieve items based on category
      operationId: searchCategory
      parameters:
        - in: path
          name: category
          schema:
            type: string
          required: true
          description: the category of the rental item
        - in: query
          name: page
          schema:
            type: integer
            format: int32
            default: 0
            example: '5'
          required: false
          description: Pagenumber, default value is 0 (first page).
        - in: query
          name: size
          schema:
            type: integer
            format: int32
            default: 8
            example: '25'
          description: The page size, number of items to return. Default value is 8.
          required: false
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
              maxLength: 50
            example: 'price;desc,name;asc'
          required: false
          description: Page sort, each item represents a sort column
      responses:
        200:
          description: Successful category search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /search:
    get:
      tags:
        - search
      summary: Search based on query string
      operationId: search
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: Execute search based on query string
        - in: query
          name: page
          schema:
            type: integer
            format: int32
            default: 0
            example: '5'
          required: false
          description: Pagenumber, default value is 0 (first page).
        - in: query
          name: size
          schema:
            type: integer
            format: int32
            default: 8
            example: '25'
          description: The page size, number of items to return. Default value is 8.
          required: false
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
              maxLength: 50
            example: 'price;desc,name;asc'
          required: false
          description: Page sort, each item represents a sort column
      responses:
        200:
          description: Successful search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
components:
  schemas:
    SearchResult:
      type: object
      required:
        - _embedded
        - page
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultItem'
        page:
          $ref: './utils/PaginationResponse.yaml'
    SearchResultItem:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int64
          description: The ID of a rental item
          example: 1
        rentalItemSlug:
          type: string
          format: text
          description: the slug of the rental item
          example: 'de-bunker-bouwdroger-50-liter'
        title:
          type: string
          format: text
          description: The title
          example: 'Bouwdroger'
        subtitle:
          type: string
          format: text
          description: The title
          example: '50 liter | 1600W'
        shortDescription:
          type: string
          format: text
          description: A short description of the item
          example: 'Handig voor het ontvochten van gesloten ruimtes'
        imageUrl:
          type: string
          format: uri
          description: the url to the item image
          example: 'https://storage.cloud.google.com/sharerental/0000f357-efb5-471c-abd7-e8bf6c42a455'
        pricePerDay:
          type: number
          description: Price for renting a day
          example: 15.5
        lessor:
          type: string
          format: text
          description: The name of the lessor
          example: 'De bunker'
        lessorCity:
          type: string
          format: text
          description: The city where the lessor is located
          example: 'Baarle-Nassau'