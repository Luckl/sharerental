openapi: 3.0.3
info:
  title: ShareRental - OpenAPI 3.0
  version: 0.0.1
paths:
  /transactions/mollie-callback:
    post:
      summary: callback for mollie payment
      description: https://docs.mollie.com/overview/webhooks
      tags:
        - transaction
      operationId: mollieCallback
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier for the payment transaction.
              required:
                - id
      responses:
        200:
          description: Webhook successfully processed.
  /transactions:
    get:
      tags:
        - transaction
      operationId: getTransactions
      summary: Find all items for user
      security:
        - BearerAuth: [ ]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
            default: 0
            example: '5'
          required: false
          description: Pagenumber, default value is 0 (first page).
        - in: query
          name: size
          schema:
            type: integer
            format: int32
            default: 8
            example: '25'
          description: The page size, number of items to return. Default value is 8.
          required: false
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
              maxLength: 50
            example: 'date;desc'
          required: false
          description: Page sort, each item represents a sort column
        - in: query
          name: filter
          schema:
            type: string
            example: "bouwdro"
          required: false
          description: Search query, applied to all text fields.
        - in: query
          name: status
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TransactionStatus'
          required: false
          description: Status filter
        - in: query
          name: lessorId
          schema:
            type: integer
            format: int64
          required: false
      responses:
        200:
          description: Successful result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionsResult'
    post:
      summary: Create a transaction between a lessor and renter
      operationId: startTransaction
      tags:
        - transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        200:
          description: Successfully created transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
  /transactions/calculate-price:
    post:
      summary: Calculate the price for a transaction
      operationId: calculatePrice
      tags:
        - transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCalculationInput'
      responses:
        200:
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCalculationResult'
  /transactions/get-amount-available-for-date:
    post:
      summary: Get the available amount of items for a specific date range.
      operationId: getAmountAvailableForDate
      tags:
        - transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAmountAvailableRequest'
      responses:
        200:
          description: The amount of items available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAmountAvailableResponse'
components:
  schemas:
    GetAmountAvailableResponse:
      type: object
      required:
        - amountAvailable
      properties:
        amountAvailable:
          type: integer
    GetAmountAvailableRequest:
      type: object
      required:
        - startDate
        - endDate
        - rentalItemId
      properties:
        startDate:
          type: string
          format: date
          description: The start date
        endDate:
          type: string
          format: date
          description: The end date
        rentalItemId:
          type: integer
          format: int64
    TransactionCalculationInput:
      type: object
      required:
        - startDate
        - endDate
        - rentalItemId
        - amount
        - includeVat
      properties:
        startDate:
          type: string
          format: date
          description: The start date
        endDate:
          type: string
          format: date
          description: The end date
        rentalItemId:
          type: integer
          format: int64
        amount:
          type: integer
        includeVat:
          type: boolean
    TransactionCalculationResult:
      type: object
      required:
        - price
      properties:
        price:
          type: number
    CreateTransactionRequest:
      type: object
      required:
        - rentalItemId
        - startDate
        - endDate
        - amount
      properties:
        startDate:
          type: string
          format: date
          description: The start date
        endDate:
          type: string
          format: date
          description: The end date
        rentalItemId:
          type: integer
          format: int64
        amount:
          type: integer
          minimum: 1
        renter:
          $ref: './utils/Renter.yaml#/components/schemas/RenterInput'
    CreateTransactionResponse:
      type: object
      properties:
        redirectUrl:
          type: string
          description: Mollie hosted checkout url
    GetTransactionsResult:
      type: object
      required:
        - _embedded
        - page
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        page:
          $ref: './utils/PaginationResponse.yaml'
    TransactionStatus:
      type: string
      format: enum
      enum:
        - INITIALIZED
        - PAID
        - ACCEPTED
        - COMPLETED
        - PAID_OUT
        - CANCELLED
    Transaction:
      type: object
      required:
        - id
        - startDate
        - endDate
        - amount
        - price
        - status
        - rentalItem
      properties:
        id:
          type: integer
          format: int64
        startDate:
          type: string
          format: date
          description: The start date
        endDate:
          type: string
          format: date
          description: The end date
        amount:
          type: integer
        price:
          type: number
        status:
            $ref: '#/components/schemas/TransactionStatus'
        rentalItem:
          $ref: './utils/RentalItem.yaml#/components/schemas/RentalItem'
