openapi: 3.0.3
info:
  title: ShareRental - OpenAPI 3.0
  version: 0.0.1
paths:
  /me/rental-items/{id}:
    get:
      tags:
        - rentalItem
      operationId: getRentalItem
      summary: Find a specific item
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalItem'
    post:
      tags:
        - rentalItem
      operationId: updateRentalItem
      summary: Update a specific item
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalItemInput'
      responses:
        200:
          description: Successful result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalItem'
  /me/rental-items/{id}/images:
    get:
      tags:
        - rentalItemImage
      operationId: getRentalItemImages
      summary: Find images of a specific item
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalItemImagesResult'
    post:
      tags:
        - rentalItemImage
      operationId: uploadRentalItemImage
      summary: Upload an image
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: fileType
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Successful result
  /me/rental-items:
    get:
      tags:
        - rentalItem
      operationId: getRentalItems
      summary: Find all items for user
      security:
        - BearerAuth: [ ]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
            default: 0
            example: '5'
          required: false
          description: Pagenumber, default value is 0 (first page).
        - in: query
          name: size
          schema:
            type: integer
            format: int32
            default: 8
            example: '25'
          description: The page size, number of items to return. Default value is 8.
          required: false
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
              maxLength: 50
            example: 'price;desc,name;asc'
          required: false
          description: Page sort, each item represents a sort column
        - in: query
          name: filter
          schema:
            type: string
            example: "bouwdro"
          required: false
          description: Search query, applied to all text fields.
      responses:
        200:
          description: Successful result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRentalItemsResult'
    post:
      summary: Create a new rental item
      operationId: createRentalItem
      tags:
        - rentalItem
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalItemInput'
      responses:
        201:
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalItem'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RentalItemImagesResult:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    GetRentalItemsResult:
      type: object
      required:
        - _embedded
        - page
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/RentalItem'
        page:
          $ref: './utils/PaginationResponse.yaml'
    Image:
      type: object
      properties:
        id:
          type: integer
          format: int64
        url:
          type: string
      required:
        - id
        - url
    FuelType:
      type: string
      enum: [ GASOLINE, DIESEL, ELECTRIC, OTHER ]
    RentalItemInput:
      type: object
      properties:
        name:
          type: string
        number:
          type: string
        shortDescription:
          type: string
        longDescription:
          type: string
        price_24h:
          type: number
          format: double
        price_48h:
          type: number
          format: double
        price_168h:
          type: number
          format: double
        deliveryPossible:
          type: boolean
        deliveryPrice:
          type: number
          format: double
        category:
          type: string
        reachMeters:
          type: number
          format: double
        carryingWeightKilograms:
          type: number
          format: double
        maximumWorkHeightMeters:
          type: number
          format: double
        intrinsicWeightKilograms:
          type: number
          format: double
        materialType:
          type: string
        brand:
          type: string
        maximumPressureBars:
          type: number
          format: double
        maximumHorsePower:
          type: number
          format: double
        requiredPowerVoltageVolt:
          type: number
          format: double
        workWidthMeters:
          type: number
          format: double
        vacuumAttachmentPossible:
          type: boolean
        capacityLiters:
          type: number
          format: double
        itemHeight:
          type: number
          format: double
        itemWidth:
          type: number
          format: double
        itemLength:
          type: number
          format: double
        powerWatt:
          type: number
          format: double
        maximumSurfaceSquareMeters:
          type: number
          format: double
        fuelType:
          $ref: '#/components/schemas/FuelType'
      required:
        - name
    RentalItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        number:
          type: string
        shortDescription:
          type: string
        longDescription:
          type: string
        price_24h:
          type: number
          format: double
        price_48h:
          type: number
          format: double
        price_168h:
          type: number
          format: double
        deliveryPossible:
          type: boolean
        deliveryPrice:
          type: number
          format: double
        category:
          type: string
        reachMeters:
          type: number
          format: double
        carryingWeightKilograms:
          type: number
          format: double
        maximumWorkHeightMeters:
          type: number
          format: double
        intrinsicWeightKilograms:
          type: number
          format: double
        materialType:
          type: string
        brand:
          type: string
        maximumPressureBars:
          type: number
          format: double
        maximumHorsePower:
          type: number
          format: double
        requiredPowerVoltageVolt:
          type: number
          format: double
        workWidthMeters:
          type: number
          format: double
        vacuumAttachmentPossible:
          type: boolean
        capacityLiters:
          type: number
          format: double
        itemHeight:
          type: number
          format: double
        itemWidth:
          type: number
          format: double
        itemLength:
          type: number
          format: double
        powerWatt:
          type: number
          format: double
        maximumSurfaceSquareMeters:
          type: number
          format: double
        fuelType:
          $ref: '#/components/schemas/FuelType'
      required:
        - id
        - name
