openapi: 3.0.3
info:
  title: ShareRental - OpenAPI 3.0
  version: 0.0.1
paths:
  /me/lessor:
    get:
      tags:
        - lessor
      operationId: getLessor
      summary: Find all lessors for user
      security:
        - BearerAuth: [ ]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
            default: 0
            example: '5'
          required: false
          description: Pagenumber, default value is 0 (first page).
        - in: query
          name: size
          schema:
            type: integer
            format: int32
            default: 8
            example: '25'
          description: The page size, number of items to return. Default value is 8.
          required: false
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
              maxLength: 50
            example: 'price;desc,name;asc'
          required: false
          description: Page sort, each item represents a sort column
      responses:
        200:
          description: Successful result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLessorResult'
    post:
      summary: Create a new lessor
      operationId: createLessor
      tags:
        - lessor
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessorInput'
      responses:
        201:
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lessor'
  /me/lessor/{id}:
    put:
      summary: Update a lessor
      operationId: updateLessor
      tags:
        - lessor
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessorInput'
      responses:
        201:
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lessor'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    GetLessorResult:
      type: object
      required:
        - _embedded
        - page
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/Lessor'
        page:
          $ref: './utils/PaginationResponse.yaml'
    Lessor:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Franskes machineverhuur"
        description:
          type: string
          example: "Machineverhuur voor iedereen!"
        phoneNumber:
          type: string
          example: "+31 6 43209314"
        primaryLocation:
          $ref: '#/components/schemas/Location'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        houseNumberAddition:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
    LessorInput:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          example: "Franskes machineverhuur"
        description:
          type: string
          example: "Machineverhuur voor iedereen!"
        phoneNumber:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        houseNumberAddition:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
